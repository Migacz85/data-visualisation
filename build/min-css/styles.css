*,body{padding:0}body,body .wrapper,body h3{background-color:#fff}div.dc-chart,svg{float:none!important}*{margin:0}.web-title{color:#fff;font-weight:100}.title{margin-top:300px}html{height:100%}body{margin:0;font-family:'Didact Gothic',sans-serif}body li{color:#42648f;list-style:none}body a{color:#19879b}body .container h1,body .container h2,body .container h3,body .container h4,body .container h5,body .container p{margin-top:30px;margin-bottom:30px}body .marginTB,body h1,body h2,body h3,body h4,body p{margin-top:10px;margin-bottom:0}body .wrapper{width:90%;margin:auto}body h3::before{z-index:-1;height:10px;width:100px;top:0;position:relative}body h1{color:#494949}body h2{color:#626262}body h3{color:#7c7c7c;z-index:4}body h4{color:#959595}body p{color:#121b26}body footer{padding:5px;background-color:#42648f;position:relative;bottom:0;width:100%;height:50px}body footer p{color:#fff;text-align:center}input{margin-right:15px;margin-left:3px}#progress-bar{background-color:transparent;width:100%;bottom:0;z-index:2;position:fixed}svg .x.axis text{text-anchor:start!important;-webkit-transform:rotate(40deg);transform:rotate(40deg)}.axis line,.axis path{fill:none;stroke:#000;shape-rendering:crispEdges}svg{margin-right:auto;margin-left:auto;display:table;left:50%}.container{z-index:0;background-color:#fff;min-height:100vh}.wrapper{min-height:100vh}.card{border-color:#42648f;margin:20px auto}.box-shadow{box-shadow:0 0 5px #324c6c}.bg-custom{background-color:#42648f;color:#223349}#loader{margin-top:100px;background:#ff0;position:absolute;width:200px;height:200px;top:40%;left:50%;margin-right:-50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%)}@media only screen and (max-width:600px){.wrapper:after,.wrapper:before,body .wrapper:after,body h3::before{display:none}.check{display:block}}@media only screen and (min-width:601px){.check{display:inline}}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlc2V0L19yZXNldC5zY3NzIiwic3R5bGVzLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsRUNnQkEsS0FFSSxRQUFBLEVBRkosS0FBQSxjQUFBLFFBd0ZRLGlCQUFBLEtBZ0RSLGFBaUJBLElBTUksTUFBQSxlRC9LSixFQUNJLE9BQU8sRUNLWCxXQUNJLE1BQUEsS0FFQSxZQUFBLElBR0osT0FDSSxXQUFBLE1BRUosS0FBTSxPQUFBLEtBQ04sS0FHSSxPQUFBLEVBQ0EsWUFBQSxnQkFBQSxXQUpKLFFBUVEsTUFBQSxRQUNBLFdBQUEsS0FUUixPQWFRLE1BQUEsUUFiUixtQkFBQSxtQkFBQSxtQkFBQSxtQkFBQSxtQkFBQSxrQkFzQlEsV0FBQSxLQUNBLGNBQUEsS0F2QlIsZUFBQSxRQUFBLFFBQUEsUUFBQSxRQUFBLE9BMkJRLFdBQUEsS0FDQSxjQUFBLEVBNUJSLGNBZ0NRLE1BQUEsSUFDQSxPQUFBLEtBakNSLGdCQStEUSxRQUFBLEdBQ0EsT0FBQSxLQUNBLE1BQUEsTUFDQSxJQUFBLEVBQ0EsU0FBQSxTQW5FUixRQXdFUSxNQUFBLFFBeEVSLFFBZ0ZRLE1BQUEsUUFoRlIsUUFzRlEsTUFBQSxRQUNBLFFBQUEsRUF2RlIsUUE2RlEsTUFBQSxRQTdGUixPQW1HUSxNQUFBLFFBbkdSLFlBMEdRLFFBQUEsSUFDQSxpQkFBQSxRQUNBLFNBQUEsU0FDQSxPQUFBLEVBQ0EsTUFBQSxLQUNBLE9BQUEsS0EvR1IsY0FtSFEsTUFBQSxLQUNBLFdBQUEsT0FNUixNQUNJLGFBQUEsS0FDQSxZQUFBLElBR0osY0FDSSxpQkFBQSxZQUNBLE1BQUEsS0FDQSxPQUFBLEVBQ0EsUUFBQSxFQUNBLFNBQUEsTUFRSixpQkFFSSxZQUFBLGdCQUNBLGtCQUFBLGNBQUEsVUFBQSxjQUdKLFdBRUEsV0FBSSxLQUFBLEtBQ0EsT0FBQSxLQUNBLGdCQUFBLFdBR0osSUFDSSxhQUFBLEtBQ0EsWUFBQSxLQUdBLFFBQUEsTUFFQSxLQUFBLElBTUosV0FDSSxRQUFBLEVBQ0EsaUJBQUEsS0FDQSxXQUFBLE1BRUosU0FDSyxXQUFBLE1BR0wsTUFLSSxhQUFBLFFBSkEsQUFDQSxBQUNBLEFBQ0EsT0FGQSxLQUVBLEtBSUosWUFDSSxXQUFBLEVBQUEsRUFBQSxJQUFBLFFBR0osV0FDSSxpQkFBQSxRQUNBLE1BQUEsUUFNSixRQUNJLFdBQUEsTUFDQSxXQUFBLEtBQ0EsU0FBQSxTQUNBLE1BQUEsTUFDQSxPQUFBLE1BQ0EsSUFBQSxJQUNBLEtBQUEsSUFDQSxhQUFBLEtBQ0Esa0JBQUEscUJBQUEsVUFBQSxxQkFJSix5Q0FFSSxlQUdBLGdCQXJOSixvQkFBQSxnQkFvTlEsUUFBQSxLQUdKLE9BQ0ksUUFBQSxPQUlSLHlDQUxJLE9BT0ksUUFBQSIsImZpbGUiOiJzdHlsZXMuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiKiB7XG4gICAgbWFyZ2luOjBweDtcbiAgICBwYWRkaW5nOjA7ICAgIFxufVxuXG4iLCJAaW1wb3J0IFwiLi9yZXNldC9yZXNldFwiO1xuQGltcG9ydCBcIi4vZnVuY3Rpb25zXCI7XG5cbiRtYWluLWNvbDogcmdiKDY2LCAxMDAsIDE0Myk7XG4kZm9udHM6ICM2MjYyNjI7XG5cbi53ZWItdGl0bGUge1xuICAgIGNvbG9yOiBsaWdodGVuKHNldC1jb2xvcigkbWFpbi1jb2wpLCAxNSk7XG4gICAgLy9mb250LWZhbWlseTogJ05vdG8gU2VyaWYgS1InLCBzYW5zLXNlcmlmO1xuICAgIGZvbnQtd2VpZ2h0OiAxMDA7XG59XG5cbi50aXRsZSB7XG4gICAgbWFyZ2luLXRvcDogMzAwcHg7XG59XG5odG1seyBoZWlnaHQ6MTAwJTt9XG5ib2R5IHtcbiAgICBcbiAgICBwYWRkaW5nOiAwO1xuICAgIG1hcmdpbjogMDtcbiAgICBmb250LWZhbWlseTogJ0RpZGFjdCBHb3RoaWMnLCBzYW5zLXNlcmlmO1xuICAgIGJhY2tncm91bmQtY29sb3I6IGxpZ2h0ZW4oJG1haW4tY29sLCA2NSk7XG5cbiAgICBsaSB7XG4gICAgICAgIGNvbG9yOiBkYXJrZW4oc2V0LWNvbG9yKCRtYWluLWNvbCksIDUwKTtcbiAgICAgICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICB9XG5cbiAgICBhIHtcbiAgICAgICAgY29sb3I6IHJnYigyNSwgMTM1LCAxNTUpO1xuICAgIH1cblxuICAgIC5jb250YWluZXIgaDEsXG4gICAgLmNvbnRhaW5lciBoMixcbiAgICAuY29udGFpbmVyIGgzLFxuICAgIC5jb250YWluZXIgaDQsXG4gICAgLmNvbnRhaW5lciBoNSxcbiAgICAuY29udGFpbmVyIHAge1xuICAgICAgICBtYXJnaW4tdG9wOiAzMHB4O1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICAgIH1cblxuICAgIC5tYXJnaW5UQiB7XG4gICAgICAgIG1hcmdpbi10b3A6IDEwcHg7XG4gICAgICAgIG1hcmdpbi1ib3R0b206IDBweDtcbiAgICB9XG5cbiAgICAud3JhcHBlciB7XG4gICAgICAgIHdpZHRoOiA5MCU7XG4gICAgICAgIG1hcmdpbjogYXV0bztcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgfVxuXG4gICAgLyoud3JhcHBlcjpiZWZvcmUsXG4gICAgXG4gICAgLndyYXBwZXI6YWZ0ZXIge1xuICAgICAgICBjb250ZW50OiBcIlwiO1xuICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICAgIHRvcDogMjM1cHg7XG4gICAgICAgIHotaW5kZXg6IC0xO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgd2lkdGg6IDEwcHg7XG4gICAgICAgIGhlaWdodDogMTYwcHg7XG4gICAgICAgIGJhY2tncm91bmQ6IHJnYmEoMzksIDQ0LCA0OSwgMC43NSk7XG4gICAgICAgIGZpbHRlcjogYmx1cigyNXB4KTtcbiAgICB9ICovXG5cbiAgICAud3JhcHBlcjphZnRlciB7XG4gICAgICAgIEBleHRlbmQgLndyYXBwZXI6YmVmb3JlO1xuICAgICAgICAvLyAgICByaWdodDogNSU7XG4gICAgfVxuXG4gICAgaDMge1xuICAgICAgICB6LWluZGV4OiAtMztcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgfVxuXG4gICAgaDM6OmJlZm9yZSB7XG4gICAgICAgIEBleHRlbmQgLndyYXBwZXI6YmVmb3JlO1xuICAgICAgICB6LWluZGV4OiAtMTtcbiAgICAgICAgaGVpZ2h0OiAxMHB4O1xuICAgICAgICB3aWR0aDogMTAwcHg7XG4gICAgICAgIHRvcDogMHB4O1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgfVxuXG4gICAgaDEge1xuICAgICAgICBAZXh0ZW5kIC5tYXJnaW5UQjtcbiAgICAgICAgY29sb3I6IGRhcmtlbihzZXQtY29sb3IoJGZvbnRzKSwgNjApO1xuICAgICAgICAvL3RleHQtc2hhZG93OjBweCAwcHggMTBweCAgaW52ZXJ0KCRtYWluLWNvbCwgMjApOyAgICAgXG5cbiAgICB9XG5cblxuICAgIGgyIHtcbiAgICAgICAgQGV4dGVuZCAubWFyZ2luVEI7XG4gICAgICAgIGNvbG9yOiBkYXJrZW4oc2V0LWNvbG9yKCRmb250cyksIDUwKTtcbiAgICAgICAgLy90ZXh0LXNoYWRvdzowcHggMHB4IDEwcHggIGludmVydCgkbWFpbi1jb2wsIDIwKTsgICAgIFxuICAgIH1cblxuICAgIGgzIHtcbiAgICAgICAgQGV4dGVuZCAubWFyZ2luVEI7XG4gICAgICAgIGNvbG9yOiBkYXJrZW4oc2V0LWNvbG9yKCRmb250cyksIDQwKTtcbiAgICAgICAgei1pbmRleDogNDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgfVxuXG4gICAgaDQge1xuICAgICAgICBAZXh0ZW5kIC5tYXJnaW5UQjtcbiAgICAgICAgY29sb3I6IGRhcmtlbihzZXQtY29sb3IoJGZvbnRzKSwgMzApO1xuICAgICAgICAvL3RleHQtc2hhZG93OjBweCAwcHggMTBweCAgaW52ZXJ0KCRtYWluLWNvbCwgMjApOyAgICAgXG4gICAgfVxuXG4gICAgcCB7XG4gICAgICAgIEBleHRlbmQgLm1hcmdpblRCO1xuICAgICAgICBjb2xvcjogZGFya2VuKHNldC1jb2xvcigkbWFpbi1jb2wpLCA4MCk7XG5cbiAgICB9XG5cbiAgICBmb290ZXIge1xuICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgIGJvdHRvbTogMHB4O1xuICAgICAgICBwYWRkaW5nOjVweDtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogZGFya2VuKCRtYWluLWNvbCwgMCk7XG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICAgICAgYm90dG9tOiAwO1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgIH1cblxuICAgIGZvb3RlciBwIHtcbiAgICAgICAgY29sb3I6IGxpZ2h0ZW4oc2V0LWNvbG9yKCRtYWluLWNvbCksIDMwKTtcbiAgICAgICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIH1cbn1cblxuLy8gUmFkaW9cblxuaW5wdXQge1xuICAgIG1hcmdpbi1yaWdodDogMTVweDtcbiAgICBtYXJnaW4tbGVmdDogM3B4O1xufVxuXG4jcHJvZ3Jlc3MtYmFyIHtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBib3R0b206IDBweDtcbiAgICB6LWluZGV4OiAyO1xuICAgIHBvc2l0aW9uOiBmaXhlZDtcbn1cblxuLy8gQ2hhcnRzXG5kaXYuZGMtY2hhcnQge1xuICAgIGZsb2F0OiBub25lICFpbXBvcnRhbnQ7XG59XG5cbnN2ZyAueC5heGlzIHRleHQge1xuICAgIC8vIGRpc3BsYXk6bm9uZTtcbiAgICB0ZXh0LWFuY2hvcjogc3RhcnQgIWltcG9ydGFudDtcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSg0MGRlZyk7XG59XG5cbi5heGlzIGxpbmUsXG4uYXhpcyBwYXRoIHtcbiAgICBmaWxsOiBub25lO1xuICAgIHN0cm9rZTogIzAwMDtcbiAgICBzaGFwZS1yZW5kZXJpbmc6IGNyaXNwRWRnZXM7XG59XG5cbnN2ZyB7XG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xuICAgIG1hcmdpbi1sZWZ0OiBhdXRvO1xuXG4gICAgLy90cmFuc2Zvcm06IHRyYW5zbGF0ZSgtNTAlLCAtNTAlKTtcbiAgICBkaXNwbGF5OiB0YWJsZTtcbiAgICBmbG9hdDogbm9uZSAhaW1wb3J0YW50O1xuICAgIGxlZnQ6IDUwJTtcbiAgICBcbn1cblxuLy8gQm9vdHN0cmFwXG4uY29udGFpbmVyIHtcbiAgICBcbiAgICB6LWluZGV4OiAwO1xuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xuICAgIG1pbi1oZWlnaHQ6MTAwdmg7XG59XG4ud3JhcHBlciB7XG4gICAgIG1pbi1oZWlnaHQ6MTAwdmg7XG4gICAgIFxufVxuLmNhcmQge1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gICAgbWFyZ2luLXRvcDogMjBweDtcbiAgICBtYXJnaW4tbGVmdDogYXV0bztcbiAgICBtYXJnaW4tcmlnaHQ6IGF1dG87XG4gICAgYm9yZGVyLWNvbG9yOiBsaWdodGVuKCRtYWluLWNvbCwgMCk7XG59XG5cbi5ib3gtc2hhZG93IHtcbiAgICBib3gtc2hhZG93OiAwIDAgNXB4IGRhcmtlbigkbWFpbi1jb2wsIDEwKTtcbn1cblxuLmJnLWN1c3RvbSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogZGFya2VuKCRtYWluLWNvbCwgMCk7XG4gICAgY29sb3I6IGRhcmtlbigkbWFpbi1jb2wsIDIwKTtcbn1cblxuLy8gTG9hZGVyIG9uIGJpdGNvaW4gc2l0ZVxuXG4jbG9hZGVyIHtcbiAgICBcbiAgICBtYXJnaW4tdG9wOiAxMDBweDtcbiAgICBiYWNrZ3JvdW5kOiB5ZWxsb3c7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOjIwMHB4O1xuICAgIGhlaWdodDoyMDBweDtcbiAgICB0b3A6IDQwJTtcbiAgICBsZWZ0OiA1MCU7XG4gICAgbWFyZ2luLXJpZ2h0OiAtNTAlO1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpXG4gICAgXG59XG5cbkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogNjAwcHgpIHtcblxuICAgIC53cmFwcGVyOmFmdGVyLFxuICAgIC53cmFwcGVyOmJlZm9yZSB7XG4gICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgfVxuXG4gICAgLmNoZWNrIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgfVxufVxuXG5AbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDYwMXB4KSB7XG4gICAgLmNoZWNrIHtcbiAgICAgICAgZGlzcGxheTogaW5saW5lO1xuICAgIH1cbn0iXX0= */
